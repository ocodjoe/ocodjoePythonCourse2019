#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Aug 18 14:35:32 2019

@author: oswaldcodjoe
"""
####just checking and changing my work directory.
import os
os.getcwd()
os.chdir('/Users/oswaldcodjoe/OneDrive - Washington University in St. Louis/Summer 19/Python/ocodjoePythonCourse2019/homeworks/hw3')


##Installing and importing relevant modules/libraries. Tweepy is a library
#that contains methods that allow us to access the twitter API in python. 
pip install tweepy
import tweepy

twitter = imp.load_source('oswaldapp1','/Users/oswaldcodjoe/OneDrive - Washington University in St. Louis/Summer 19/Python/SecretAPIFolder/twitterAPI/start_twitter_oswald.py')
api = twitter.client

#This code returns the remaining number of requests available to the 
#user of the api before the hourly limit (if any) is reached. The output is a
#dictionary with attributes and the dictionary is stored as limits. Note that
#this dictionary also contains dictionaries and so on. So we probe
#into this dictionary to list out limits. 

limit = api.rate_limit_status()
limit.keys()
limit['resources']
limit['resources'].keys()
limit['resources']['tweets'] 

for i in limit['resources']['tweets'].keys():
    print (limit['resources']['tweets'][i])


###This code below creates a user object, WashU. And we can access info about this object.

WashU = api.get_user('@WUSTL') 

twenty = WashU.followers() #this gives us only 20 followers
[f.name for f in twenty] #this gives the names of the followers
[f.screen_name for f in twenty] #this gives the screen names of the followers.


two_hundred = api.followers(WashU.id, count = 200) #this gives more up to 200. 
[f.screen_name for f in two_hundred]

#In order to get more than 200, we use the following method of generating
#follower ids and then looking them up individually. 

WashU.followers_ids()   #this generates up to 5k ids. In this example, we focus on just 100
for follower_id in WashU.followers_ids()[0:100]:     #Note follower_id is just a placeholder
    user = api.get_user(follower_id) 
    print(user.location)

##The code below extracts the statuses of the user object. 
WashU_statuses = []
for p in range(25):    #note: p is just a placeholder and you don't have to say range(0,25). Just range(25) also works. Didn't know this.
    WashU_statuses.extend(api.user_timeline('@WUSTL',page = p))

WashU_statuses 

##Oh this code tells you where the statuses/tweets/posts came from. Thus whether
#on twitter website, or the twitter app, or some other twitter platform.
#This gives you up to 500
source = [x.source for x in WashU_statuses]
source

#This code prints out the statuses/tweets that were made from twitter for iphone.
[x.text for x in WashU_statuses if x.source == 'Twitter for iPhone'] 

#This code below lists all the tweets (max. 500) in a nice page for you. Using Cursor
WashU_tweets = []
for status in tweepy.Cursor(api.user_timeline, id = '@WUSTL').items(500):
    WashU_tweets.append(status)

#This code below lists all the followers for you using Cursor.

WashU_followers = []
for item in tweepy.Cursor(api.followers_ids, '@WUSTL').items():
    WashU_followers.append(item)

WashU_followers 
len(WashU_followers) 


###testing something here# cont. here
for i in WashU_followers:
    print()
WashU_followers.sort()


dir(WashU)
#dir(api). By the way, this code dir(api) gives us a list of methods that we
#can use to extract things from the API or home/feeding server. 

############################# HOMEWORK 3 ANSWERS ################################
####Question 1a

##Installing and importing relevant modules/libraries. 
pip install tweepy
import tweepy

##Fetching the twitter API to be used by my program
twitter = imp.load_source('oswaldapp1','/Users/oswaldcodjoe/OneDrive - Washington University in St. Louis/Summer 19/Python/SecretAPIFolder/twitterAPI/start_twitter_oswald.py')
api = twitter.client

##Creating WashU as a user object. The entity I'm going to collect data on.
WashU = api.get_user('@WUSTL') 

##Extracting list of followers of WashU. I'm doing this for just 20 followers for now.
WashU_followers = []
for item in tweepy.Cursor(api.followers_ids,'@WUSTL').items(20): 
        WashU_followers.append(item) 

WashU_followers 

##Determining which of WashU followers has the highest number of tweets
WashU_followersstatuses =[]
for i in WashU_followers:
    WashU_followersstatuses.append(api.get_user(i).statuses_count)
    
WashU_followersstatuses

WashU_followersstatuses.sort(reverse=True) 
answer = api.get_user(WashU_followersstatuses[0])

answer

'''The WashU_follower with the most tweets is %s and that follower's
screen name is %s.'''  %(answer.name, answer.screen_name)


#####Question 1b
#Extracting, into a list, the number of followers each of the followers of WashU has.
fof_count = []
for i in WashU_followers:
    fof_count.append(api.get_user(i).followers_count)

#Determining which of WashU followers has the highest number of followers.
fof_count.sort(reverse = True)
answerb = api.get_user(fof_count[0])

answerb 

'''The WashU_follower with the most folllowers is %s and that follower's
screen name is %s.'''  %(answerb.name, answerb.screen_name)


########Question 1c.
###Extracting into a list the people that WashU follows 
WashU_friends = []
for item in tweepy.Cursor(api.friends_ids, '@WUSTL').items(20):
    WashU_friends.append(item)

WashU_friends

#Determining which of the people that WashU follows has the most followers
WU_friends_f = []
for i in WashU_friends:
    WU_friends_f.append(api.get_user(i).followers_count)
    
WU_friends_f.sort(reverse=True) 
answerc = api.get_user(WU_friends_f[0])    #####come back to this... I don't know why error

WU_friends_f   
    

##Question 1d. 
##Determining which of the people that WashU follows has the most tweets
WU_friends_statuses = []
for i in WashU_friends:
    WU_friends_statuses.append(api.get_user(i).statuses_count)

WU_friends_statuses.sort(reverse=True)
answerd = api.get_user(WU_friends_statuses[0]) 

''' The WashU friend with the most tweets is %s and that 
  that friend's screen name is %s''' %(answerd.name, answerd.screen_name)


####################Question 2#############










####Question 2




######################Testing stuff 
example=api.get_user(15737265) #Oh so you can get user info by using get_user() function and id number
dir(example)
example.statuses_count  #oh so statuses_count gives you number of tweets. 

